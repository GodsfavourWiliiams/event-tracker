{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WORK\\\\event-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Navbar from '../src/components/navbar';\nimport Tasks from './components/Tasks';\nimport Modal from './components/Modal';\nimport './components/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getEvents = async () => {\n      const eventsFronServer = await fetchEvents();\n      setTasks(eventsFronServer);\n    };\n\n    getEvents();\n  }, []); //  fetch events \n\n  const fetchEvents = async () => {\n    const res = await fetch('http://localhost:5000/events');\n    const data = await res.json();\n    console.log(data);\n    return data;\n  }; // Delete task \n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/events/${id}`, {\n      method: 'Delete'\n    });\n    console.log('deleted', id);\n    setTasks(tasks.filter(tasks => tasks.id !== id));\n  }; // Add event\n\n\n  const addEvent = async task => {\n    const res = await fetch('http://localhost:5000/events'); // const id= Math.floor(Math.random()  *10000) + 1\n    // console.log('Added', id)\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    console.log(id, 'DoubleClicked');\n    setTasks(tasks.map(tasks => tasks.id === id ? { ...tasks,\n      reminder: !tasks.reminder\n    } : tasks));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Task-Body mt-5 p-3\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowModal(!showModal),\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      onAdd: addEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this) : 'No Event Available']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sye3seL+DBtZJcbBY9mlCV55OyA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/WORK/event-tracker/src/App.js"],"names":["React","useState","useEffect","Navbar","Tasks","Modal","App","showModal","setShowModal","tasks","setTasks","getEvents","eventsFronServer","fetchEvents","res","fetch","data","json","console","log","deleteTask","id","method","filter","addEvent","task","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACDC,EAAAA,SAAS,CAAC,MAAK;AACd,UAAMS,SAAS,GAAG,YAAW;AAC3B,YAAMC,gBAAgB,GAAG,MAAMC,WAAW,EAA1C;AACAH,MAAAA,QAAQ,CAACE,gBAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,SAAS;AAET,GAPQ,EAOP,EAPO,CAAT,CAHc,CAYf;;AACC,QAAME,WAAW,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;AACC,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAOA,IAAP;AACD,GAND,CAbc,CAoBX;;;AACA,QAAMI,UAAU,GAAG,MAAMC,EAAN,IAAa;AAC9B,UAAMN,KAAK,CAAE,gCAA+BM,EAAG,EAApC,EAAuC;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAvC,CAAX;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,EAAvB;AACAX,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcd,KAAD,IAAWA,KAAK,CAACY,EAAN,KAAYA,EAApC,CAAD,CAAR;AACD,GAJD,CArBW,CA0Bf;;;AACI,QAAMG,QAAQ,GAAG,MAAOC,IAAP,IAAc;AAC7B,UAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB,CAD6B,CAE7B;AACA;AACA;AACA;AACD,GAND,CA3BW,CAkCf;;;AACI,QAAMW,cAAc,GAAIL,EAAD,IAAO;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ,EAAe,eAAf;AACAX,IAAAA,QAAQ,CAACD,KAAK,CAACkB,GAAN,CAAWlB,KAAD,IAAWA,KAAK,CAACY,EAAN,KAAaA,EAAb,GAAkB,EAAC,GAAGZ,KAAJ;AAAWmB,MAAAA,QAAQ,EAChE,CAACnB,KAAK,CAACmB;AADsC,KAAlB,GACRnB,KADb,CAAD,CAAR;AAIC,GAND;;AAOF,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,MAAD;AACA,MAAA,KAAK,EAAC,cADN;AAEA,MAAA,KAAK,EAAE,MAAMD,YAAY,CAAC,CAACD,SAAF,CAFzB;AAIA,MAAA,SAAS,EAAEA;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,EAOGA,SAAS,iBAAI,QAAC,KAAD;AACd,MAAA,KAAK,EAAEiB;AADO;AAAA;AAAA;AAAA;AAAA,YAPhB,EAUGf,KAAK,CAACoB,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEpB,KAAd;AACA,MAAA,QAAQ,EAAEW,UADV;AAEA,MAAA,QAAQ,EAAEM;AAFV;AAAA;AAAA;AAAA;AAAA,YADC,GAKI,oBAfP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA7DQpB,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Navbar from '../src/components/navbar';\r\nimport Tasks from './components/Tasks';\r\nimport Modal from './components/Modal';\r\nimport './components/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [showModal, setShowModal]=useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n useEffect(() =>{\r\n  const getEvents = async() => {\r\n    const eventsFronServer = await fetchEvents() \r\n    setTasks(eventsFronServer)\r\n  }\r\n  getEvents()\r\n   \r\n },[]\r\n )\r\n//  fetch events \r\n const fetchEvents = async () => {\r\n  const res = await fetch('http://localhost:5000/events')\r\n   const data = await res.json()\r\n   console.log(data)\r\n\r\n   return data\r\n }\r\n    // Delete task \r\n    const deleteTask = async(id) => {\r\n      await fetch(`http://localhost:5000/events/${id}`, {method:'Delete'})\r\n      console.log('deleted', id)\r\n      setTasks(tasks.filter((tasks) => tasks.id !==id))\r\n    }\r\n// Add event\r\n    const addEvent = async (task)=>{\r\n      const res = await fetch('http://localhost:5000/events') \r\n      // const id= Math.floor(Math.random()  *10000) + 1\r\n      // console.log('Added', id)\r\n      // const newTask = {id, ...task}\r\n      // setTasks([...tasks, newTask])\r\n    }\r\n// Toggle Reminder\r\n    const toggleReminder = (id) =>{\r\n    console.log(id,'DoubleClicked')\r\n    setTasks(tasks.map((tasks) => tasks.id === id ? {...tasks, reminder:\r\n       !tasks.reminder} : tasks\r\n        )\r\n      )\r\n    }\r\n  return (\r\n    <div className='Task-Body mt-5 p-3'>\r\n      <Navbar \r\n      title='Task Tracker'\r\n      onAdd={() => setShowModal(!showModal)\r\n      }\r\n      showModal={showModal}\r\n      />\r\n      {showModal && <Modal\r\n      onAdd={addEvent}\r\n      />}\r\n      {tasks.length > 0 ? (\r\n      <Tasks tasks={tasks}\r\n      onDelete={deleteTask}\r\n      onToggle={toggleReminder}\r\n      />\r\n      ) : ('No Event Available')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}