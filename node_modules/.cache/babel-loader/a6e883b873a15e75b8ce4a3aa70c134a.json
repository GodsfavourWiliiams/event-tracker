{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WORK\\\\event-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Navbar from '../src/components/navbar';\nimport Tasks from './components/Tasks';\nimport Modal from './components/Modal';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport './components/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getEvents = async () => {\n      const eventsFronServer = await fetchEvents();\n      setTasks(eventsFronServer);\n    };\n\n    getEvents();\n  }, []); //  fetch events \n\n  const fetchEvents = async () => {\n    const res = await fetch('http://localhost:5000/events');\n    const data = await res.json();\n    console.log(data);\n    return data;\n  }; //  \n\n\n  const fetchEvent = async id => {\n    const res = await fetch(`http://localhost:5000/events/${id}`);\n    const data = await res.json();\n    console.log(data);\n    return data;\n  }; // Delete task \n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/events/${id}`, {\n      method: 'Delete'\n    });\n    console.log('deleted', id);\n    setTasks(tasks.filter(tasks => tasks.id !== id));\n  }; // Add event\n\n\n  const addEvent = async task => {\n    const res = await fetch('http://localhost:5000/events', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const eventToggle = await fetchEvent(id);\n    const updateEvent = { ...eventToggle,\n      reminder: !eventToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/events/${id}`, {\n      method: 'PuT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updateEvent)\n    });\n    const data = await res.json();\n    console.log(id, 'DoubleClicked');\n    setTasks(tasks.map(tasks => tasks.id === id ? { ...tasks,\n      reminder: data.reminder\n    } : tasks));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Event Tracker\",\n        onAdd: () => setShowModal(!showModal),\n        showModal: showModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"sye3seL+DBtZJcbBY9mlCV55OyA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/WORK/event-tracker/src/App.js"],"names":["React","BrowserRouter","Router","Route","useState","useEffect","Navbar","Tasks","Modal","About","Footer","App","showModal","setShowModal","tasks","setTasks","getEvents","eventsFronServer","fetchEvents","res","fetch","data","json","console","log","fetchEvent","id","deleteTask","method","filter","addEvent","task","headers","body","JSON","stringify","toggleReminder","eventToggle","updateEvent","reminder","map","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router,\r\n  Route,\r\n  } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport Navbar from '../src/components/navbar';\r\nimport Tasks from './components/Tasks';\r\nimport Modal from './components/Modal';\r\nimport About from './components/About';\r\nimport Footer from './components/Footer';\r\nimport './components/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [showModal, setShowModal]=useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n useEffect(() =>{\r\n  const getEvents = async() => {\r\n    const eventsFronServer = await fetchEvents() \r\n    setTasks(eventsFronServer)\r\n  }\r\n  getEvents()\r\n   \r\n },[]\r\n )\r\n//  fetch events \r\n const fetchEvents = async () => {\r\n  const res = await fetch('http://localhost:5000/events')\r\n   const data = await res.json()\r\n   console.log(data)\r\n\r\n   return data\r\n }\r\n//  \r\n const fetchEvent = async (id) => {\r\n  const res = await fetch(`http://localhost:5000/events/${id}`)\r\n   const data = await res.json()\r\n   console.log(data)\r\n\r\n   return data\r\n }\r\n    // Delete task \r\n    const deleteTask = async(id) => {\r\n      await fetch(`http://localhost:5000/events/${id}`, {method:'Delete'})\r\n      console.log('deleted', id)\r\n      setTasks(tasks.filter((tasks) => tasks.id !==id))\r\n    }\r\n// Add event\r\n    const addEvent = async (task) =>  {\r\n      const res = await fetch('http://localhost:5000/events', {\r\n        method:'POST',\r\n        headers:  {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body:JSON.stringify(task),\r\n      }) \r\n      const data = await res.json()\r\n      setTasks([...tasks, data])\r\n    }\r\n// Toggle Reminder\r\n    const toggleReminder = async (id) =>{\r\n      const eventToggle =await fetchEvent(id)\r\n      const updateEvent ={...eventToggle,\r\n      reminder:!eventToggle.reminder}\r\n      const res = await fetch(`http://localhost:5000/events/${id}`, {\r\n        method:'PuT',\r\n        headers:  {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body:JSON.stringify(updateEvent),\r\n      }) \r\n\r\n      const data = await res.json()       \r\n\r\n    console.log(id,'DoubleClicked')\r\n    setTasks(tasks.map((tasks) => tasks.id === id ? {...tasks, reminder:\r\n       data.reminder} : tasks\r\n        )\r\n      )\r\n    }\r\n  return (\r\n  <Router>\r\n    <div className=''>\r\n      <Navbar \r\n      title='Event Tracker'\r\n      onAdd={() => setShowModal(!showModal)\r\n      }\r\n      showModal={showModal}\r\n      />\r\n   <Route path=\"/\" exact render={(props) => (\r\n     <>\r\n     </>\r\n   ) }/>\r\n      <Route path=\"/about\" component={About}/>\r\n      <Footer/>\r\n    </div>\r\n   </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}