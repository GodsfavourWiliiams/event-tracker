{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WORK\\\\event-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Navbar from '../src/components/navbar';\nimport Tasks from './components/Tasks';\nimport Modal from './components/Modal';\nimport './components/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [tasks, setTasks] = useState(); // Delete task \n\n  const deleteTask = id => {\n    console.log('deleted', id);\n    setTasks(tasks.filter(tasks => tasks.id !== id));\n  }; // Add event\n\n\n  const addEvent = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log('Added', id);\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    console.log(id, 'DoubleClicked');\n    setTasks(tasks.map(tasks => tasks.id === id ? { ...tasks,\n      reminder: !tasks.reminder\n    } : tasks));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Task-Body mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowModal(!showModal),\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      onAdd: addEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this) : 'No Event Available']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hAgrOWK5YU7T7M31KybDfeieS4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/WORK/event-tracker/src/App.js"],"names":["React","useState","Navbar","Tasks","Modal","App","showModal","setShowModal","tasks","setTasks","deleteTask","id","console","log","filter","addEvent","task","Math","floor","random","newTask","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC,CAFa,CAIX;;AACA,QAAMS,UAAU,GAAIC,EAAD,IAAQ;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,EAAvB;AACAF,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAcN,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAYA,EAApC,CAAD,CAAR;AACD,GAHD,CALW,CASf;;;AACI,QAAMI,QAAQ,GAAGC,IAAD,IAAQ;AACtB,UAAML,EAAE,GAAEM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA9C;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,EAArB;AACA,UAAMS,OAAO,GAAG;AAACT,MAAAA,EAAD;AAAK,SAAGK;AAAR,KAAhB;AACAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWY,OAAX,CAAD,CAAR;AACD,GALD,CAVW,CAgBf;;;AACI,QAAMC,cAAc,GAAIV,EAAD,IAAO;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAe,eAAf;AACAF,IAAAA,QAAQ,CAACD,KAAK,CAACc,GAAN,CAAWd,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaA,EAAb,GAAkB,EAAC,GAAGH,KAAJ;AAAWe,MAAAA,QAAQ,EAChE,CAACf,KAAK,CAACe;AADsC,KAAlB,GACRf,KADb,CAAD,CAAR;AAIC,GAND;;AAOF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,MAAD;AACA,MAAA,KAAK,EAAC,cADN;AAEA,MAAA,KAAK,EAAE,MAAMD,YAAY,CAAC,CAACD,SAAF,CAFzB;AAIA,MAAA,SAAS,EAAEA;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,EAOGA,SAAS,iBAAI,QAAC,KAAD;AACd,MAAA,KAAK,EAAES;AADO;AAAA;AAAA;AAAA;AAAA,YAPhB,EAUGP,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AACA,MAAA,QAAQ,EAAEE,UADV;AAEA,MAAA,QAAQ,EAAEW;AAFV;AAAA;AAAA;AAAA;AAAA,YADC,GAKI,oBAfP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3CQhB,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport Navbar from '../src/components/navbar';\r\nimport Tasks from './components/Tasks';\r\nimport Modal from './components/Modal';\r\nimport './components/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [showModal, setShowModal]=useState(false)\r\n  const [tasks, setTasks] = useState(\r\n )\r\n    // Delete task \r\n    const deleteTask = (id) => {\r\n      console.log('deleted', id)\r\n      setTasks(tasks.filter((tasks) => tasks.id !==id))\r\n    }\r\n// Add event\r\n    const addEvent =(task)=>{\r\n      const id= Math.floor(Math.random()  *10000) + 1\r\n      console.log('Added', id)\r\n      const newTask = {id, ...task}\r\n      setTasks([...tasks, newTask])\r\n    }\r\n// Toggle Reminder\r\n    const toggleReminder = (id) =>{\r\n    console.log(id,'DoubleClicked')\r\n    setTasks(tasks.map((tasks) => tasks.id === id ? {...tasks, reminder:\r\n       !tasks.reminder} : tasks\r\n        )\r\n      )\r\n    }\r\n  return (\r\n    <div className='Task-Body mt-5'>\r\n      <Navbar \r\n      title='Task Tracker'\r\n      onAdd={() => setShowModal(!showModal)\r\n      }\r\n      showModal={showModal}\r\n      />\r\n      {showModal && <Modal\r\n      onAdd={addEvent}\r\n      />}\r\n      {tasks.length > 0 ? (\r\n      <Tasks tasks={tasks}\r\n      onDelete={deleteTask}\r\n      onToggle={toggleReminder}\r\n      />\r\n      ) : ('No Event Available')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}